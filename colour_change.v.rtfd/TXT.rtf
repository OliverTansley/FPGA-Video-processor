{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red51\green51\blue51;\red255\green255\blue255;\red27\green27\blue27;
\red109\green109\blue109;\red242\green242\blue242;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c25882\c25882\c25882;\cssrgb\c100000\c100000\c100000;\cssrgb\c14118\c14118\c14118;
\cssrgb\c50196\c50196\c50196;\cssrgb\c96078\c96078\c96078;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww35800\viewh22520\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
`timescale 1ns / 1ps\
//////////////////////////////////////////////////////////////////////////////////\
// Author: Alex Bucknall\
// \
// Create Date: 19.02.2019 15:33:35\
// Design Name: pcam-5c-zybo\
// Module Name: colour_change\
// Project Name: pcam-5c-zybo\
// Target Devices: Zybo Z7 20\
// Tool Versions: Vivado 2017.4\
// Description: RBG Colour Changing Module (vid_io)\
// \
// Dependencies: N/A\
// \
// Revision: 0.01\
// Revision 0.01 - File Created\
// Additional Comments: N/A\
// \
//////////////////////////////////////////////////////////////////////////////////\
\
\
module colour_change #\
(\
    parameter DATA_WIDTH = 24, // 8 bits for R, G & B\
    parameter IMAGE_WIDTH = 1280,\
    parameter IMAGE_HEIGHT = 720,\
    parameter A = 1,\
    parameter B = 50\
)\
(\
    input  wire                   clk,\
    input  wire                   n_rst,\
\
    /*\
     * Pixel inputs\
     */\
    input  wire [DATA_WIDTH-1:0] i_vid_data,\
    input  wire                  i_vid_hsync,\
    input  wire                  i_vid_vsync,\
    input  wire                  i_vid_VDE,\
\
    /*\
     * Pixel output\
     */\
    output reg [DATA_WIDTH-1:0] o_vid_data,\
    output reg                  o_vid_hsync,\
    output reg                  o_vid_vsync,\
    output reg                  o_vid_VDE\
);\
\
wire [7:0] red;\
wire [7:0] blu;\
wire [7:0] gre;\
\
assign \{red,blu,gre\} = i_vid_data;\
\
wire [7:0] TRred = red > (8'b11111111 -B)/A ?  8'b11111111:A*red + B ;\
wire [7:0] TRblu = blu > (8'b11111111 -B)/A  ?  8'b11111111:A*blu + B ;\
wire [7:0] TRgre = gre > (8'b11111111 -B)/A  ? 8'b11111111:A*gre + B ;\
\
wire [23:0] TR_o_vid_data = \{TRred,TRblu,TRgre\};\
\
always @ (posedge clk) begin\
    if(!n_rst) begin\
        o_vid_hsync <= 0;\
        o_vid_vsync <= 0; \
        o_vid_VDE <= 0;\
        o_vid_data <= 0;\
    end\
    else begin\
        o_vid_hsync <= i_vid_hsync;\
        o_vid_vsync <= i_vid_vsync; \
        o_vid_VDE <= i_vid_VDE;        \
        o_vid_data <= TR_o_vid_data; \
    end\
end\
\
endmodule\cb1 \
\pard\pardeftab720\partightenfactor0

\f1 \cf4 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\
\pard\pardeftab720\qc\partightenfactor0

\fs24 \cf5 \cb6 \uc0\u59762 \cb1 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf0 \
}